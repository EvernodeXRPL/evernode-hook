#ifndef TRANSACTIONS_INCLUDED
#define TRANSACTIONS_INCLUDED 1

/**************************************************************************/
/*************Pre-populated templates of Payment Transactions**************/
/**************************************************************************/
// Simple IOU transaction.
uint8_t PAYMENT_SIMPLE_TRUSTLINE_TXN[310] = {
    0x12, 0x00, 0x00,                                                                                                       // transaction_type(ttPAYMENT)
    0x22, 0x80, 0x00, 0x00, 0x00,                                                                                           // flags(tfCANONICAL)
    0x23, 0x00, 0x00, 0x00, 0x00,                                                                                           // TAG_SOURCE
    0x24, 0x00, 0x00, 0x00, 0x00,                                                                                           // sequence(0)
    0x2E, 0x00, 0x00, 0x00, 0x00,                                                                                           // TAG DESTINATION
    0x20, 0x1A, 0x00, 0x00, 0x00, 0x00,                                                                                     // first_ledger_sequence(ledger_seq + 1) - Added on prepare to offset 25
    0x20, 0x1B, 0x00, 0x00, 0x00, 0x00,                                                                                     // last_ledger_sequence(ledger_seq + 5) - Added on prepare to offset 31
    0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,                                                                   // amount_details (amount offset 36)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //    currency_code
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //    issuer
    0x68, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,                                                                   // fee (offset 84)
    0x73, 0x21,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Signing Public Key (NULL offset 95)
    0x81, 0x14,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // >> account_source(20) - Added on prepare to offset 130
    0x83, 0x14,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // >> account_destination(20) - Added on prepare to offset 152
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    // >> emit_details(137) - Added on prepare to offset 172
    // >> emit_details - NOTE : Considered additional 22 bytes for the callback scenario.
};

#define PAYMENT_SIMPLE_TRUSTLINE_TXN_SIZE \
    sizeof(PAYMENT_SIMPLE_TRUSTLINE_TXN)
#define PREPARE_PAYMENT_SIMPLE_TRUSTLINE_TXN(tlamt, to_address)                  \
    {                                                                            \
        uint8_t *buf_out = PAYMENT_SIMPLE_TRUSTLINE_TXN;                         \
        uint32_t cls = (uint32_t)ledger_seq();                                   \
        UINT32_TO_BUF((buf_out + 25), cls + 1);                                  \
        UINT32_TO_BUF((buf_out + 31), cls + 5);                                  \
        COPY_40BYTES((buf_out + 36), tlamt);                                     \
        COPY_8BYTES((buf_out + 36 + 40), (tlamt + 40));                          \
        COPY_20BYTES((buf_out + 130), hook_accid);                               \
        COPY_20BYTES((buf_out + 152), to_address);                               \
        etxn_details((buf_out + 172), PAYMENT_SIMPLE_TRUSTLINE_TXN_SIZE);        \
        int64_t fee = etxn_fee_base(buf_out, PAYMENT_SIMPLE_TRUSTLINE_TXN_SIZE); \
        uint8_t *fee_ptr = buf_out + 84;                                         \
        CHECK_AND_ENCODE_FINAL_TRX_FEE(fee_ptr, fee);                            \
    }

#endif
